// ------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Версия среды выполнения: 14.0.0.0
//  
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Lab5
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class ClassController : ClassControllerBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n using MySql.Data.MySqlClient;\r\n using Sample.Model;\r\n using System;\r\n using Sy" +
                    "stem.Collections.Generic; \r\n using System.Linq;\r\n using System.Text;\r\n using Sys" +
                    "tem.Threading.Tasks;\r\n using System.Windows.Forms;\r\n\r\nnamespace Sample\r\n{\r\n\tclas" +
                    "s ");
            
            #line 18 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Label.Text));
            
            #line default
            #line hidden
            this.Write("Controller\r\n\t{\r\n\t\tpublic static string showStr = \"SELECT ");
            
            #line 20 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
 for (int i = 0; i < this.table.Field.Count; i++) { if (i == this.table.Field.Count - 1) {
            
            #line default
            #line hidden
            
            #line 20 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write("\"");
            
            #line 20 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            
            #line 20 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
else {
            
            #line default
            #line hidden
            
            #line 20 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 20 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            
            #line 20 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            this.Write("+ \" FROM ");
            
            #line 21 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Label.Text));
            
            #line default
            #line hidden
            this.Write("\";\r\n\t\tpublic static void Insert");
            
            #line 22 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Label.Text));
            
            #line default
            #line hidden
            this.Write("(List<string> listField)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tQuery.connection.Open();\r\n\t\t\t\tst" +
                    "ring sqlExpression = \"INSERT INTO ");
            
            #line 27 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Label.Text));
            
            #line default
            #line hidden
            this.Write(" (");
            
            #line 27 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
for (int i = 0; i < this.table.Field.Count; i++){
            
            #line default
            #line hidden
            
            #line 27 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
if (this.table.Field[i].Label.Text != "Id"){
            
            #line default
            #line hidden
            
            #line 27 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
if (i == this.table.Field.Count - 1){
            
            #line default
            #line hidden
            
            #line 27 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write("\"");
            
            #line 27 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            
            #line 27 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
else{
            
            #line default
            #line hidden
            
            #line 27 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 27 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            
            #line 27 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            
            #line 27 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            this.Write("+ \") VALUES (");
            
            #line 28 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
for (int i = 0; i < this.table.Field.Count; i++){
            
            #line default
            #line hidden
            
            #line 28 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
if (this.table.Field[i].Label.Text != "Id"){
            
            #line default
            #line hidden
            
            #line 28 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
if (i == this.table.Field.Count - 1){
            
            #line default
            #line hidden
            this.Write("@");
            
            #line 28 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            
            #line 28 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            
            #line 28 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
else{
            
            #line default
            #line hidden
            this.Write("@");
            
            #line 28 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 28 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            
            #line 28 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            
            #line 28 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            this.Write(")\";                       \r\n\t\t\t\tMySqlCommand command = new MySqlCommand(sqlExpres" +
                    "sion, Query.connection);\r\n");
            
            #line 30 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
               for (int i = 0; i < this.table.Field.Count; i++){
            
            #line default
            #line hidden
            
            #line 31 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
                       if (this.table.Field[i].Label.Text != "Id"){  
            
            #line default
            #line hidden
            this.Write("\t\t\t\tMySqlParameter ");
            
            #line 32 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write("Param = new MySqlParameter(\"@");
            
            #line 32 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write("\", listField[");
            
            #line 32 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i - 1));
            
            #line default
            #line hidden
            this.Write("]);\r\n\t\t\t\tcommand.Parameters.Add(");
            
            #line 33 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write("Param);\r\n");
            
            #line 34 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
                    }
            
            #line default
            #line hidden
            
            #line 35 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
                }
            
            #line default
            #line hidden
            this.Write("\t\t\t\tcommand.ExecuteNonQuery();\r\n\t\t\t\tMessageBox.Show(\" Готово! \");\r\n\t\t\t}\r\n\t\t\tcatch" +
                    "(Exception ex) {  MessageBox.Show(ex.ToString()); }\r\n\t\t\tfinally {  Query.connect" +
                    "ion.Close(); }\r\n\t\t}\r\n\t\tpublic static void Update");
            
            #line 42 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Label.Text));
            
            #line default
            #line hidden
            this.Write("(List<string> listField, int id)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tQuery.connection.Open();" +
                    "\r\n\t\t\t\tstring sqlExpression = \"UPDATE ");
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Label.Text));
            
            #line default
            #line hidden
            this.Write(" SET ");
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
for (int i = 0; i < this.table.Field.Count; i++){
            
            #line default
            #line hidden
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
if (this.table.Field[i].Label.Text != "Id"){
            
            #line default
            #line hidden
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
if (i == this.table.Field.Count - 1){
            
            #line default
            #line hidden
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write(" = @");
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write("\"");
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
else{
            
            #line default
            #line hidden
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write(" = @");
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            
            #line 47 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            this.Write("+ \" WHERE ID = @Id\";\r\n\t\t\t\tMySqlCommand command = new MySqlCommand(sqlExpression, " +
                    "Query.connection);\r\n");
            
            #line 50 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
for (int i = 0; i < this.table.Field.Count; i++){ 
            
            #line default
            #line hidden
            
            #line 51 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
if (this.table.Field[i].Label.Text != "Id"){ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\tMySqlParameter ");
            
            #line 52 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write("Param = new MySqlParameter(\"@");
            
            #line 52 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write("\", listField[");
            
            #line 52 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(i - 1));
            
            #line default
            #line hidden
            this.Write("]);\r\n\t\t\t\tcommand.Parameters.Add(");
            
            #line 53 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write("Param);\r\n");
            
            #line 54 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            
            #line 55 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
else{
            
            #line default
            #line hidden
            this.Write("\t\t\t\tMySqlParameter ");
            
            #line 56 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write("Param = new MySqlParameter(\"@");
            
            #line 56 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write("\", id);\r\n\t\t\t\tcommand.Parameters.Add(");
            
            #line 57 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Field[i].Label.Text));
            
            #line default
            #line hidden
            this.Write("Param);\r\n");
            
            #line 58 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            this.Write(" \r\n");
            
            #line 59 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\tcommand.ExecuteNonQuery();\r\n\t\t\t\tMessageBox.Show(\" Готово! \");\r\n\t\t\t}\r\n\t\t\tcatch" +
                    "(Exception ex) {  MessageBox.Show(ex.ToString()); }\r\n\t\t\tfinally {  Query.connect" +
                    "ion.Close(); }\r\n\t\t}\r\n\r\n\t\tpublic static List<string> Combo");
            
            #line 67 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Label.Text));
            
            #line default
            #line hidden
            this.Write("()\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tList<string> result = new List<string>();\r\n\t\t\t\tQuery.c" +
                    "onnection.Open();\r\n\t\t\t\tstring sqlExpression = \"SELECT Id From ");
            
            #line 73 "C:\Users\WorkUser\Desktop\Lab5Constr\Lab5\Lab5\ClassController.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.table.Label.Text));
            
            #line default
            #line hidden
            this.Write(@""";
				MySqlCommand command = new MySqlCommand(sqlExpression, Query.connection);
				MySqlDataReader reader = command.ExecuteReader();
				while (reader.Read())
				{
					result.Add(reader.GetString(0));
				}
				reader.Close();
				return result;
			}
			catch(Exception ex) {  MessageBox.Show(ex.ToString()); return null; }
			finally {  Query.connection.Close(); }
		}                   
	}
}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class ClassControllerBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
